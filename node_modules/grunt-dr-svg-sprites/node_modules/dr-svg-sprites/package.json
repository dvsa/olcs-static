{
  "name": "dr-svg-sprites",
  "description": "Create SVG sprites with PNG fallbacks at needed sizes",
  "version": "0.9.32",
  "homepage": "https://github.com/drdk/dr-svg-sprites#readme",
  "author": {
    "name": "rasmusfl0e",
    "email": "rasmusfl0e@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/drdk/dr-svg-sprites.git"
  },
  "bugs": {
    "url": "https://github.com/drdk/dr-svg-sprites/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "/blob/master/LICENSE-MIT"
    }
  ],
  "main": "index.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "dependencies": {
    "async": "^1.4.0",
    "handlebars": "^2.0.0",
    "layout": "2.2.0",
    "lodash": "^3.1.0",
    "mkdirp": "^0.5.1",
    "svg2png": "^1.1.1",
    "svgo": "^0.4.5",
    "through2": "^2.0.0",
    "vinyl-fs": "^1.0.0"
  },
  "keywords": [
    "svg",
    "sprites"
  ],
  "devDependencies": {
    "diff": "^1.0.8",
    "hashfile": "0.0.0"
  },
  "scripts": {
    "test": "node test/runner.js"
  },
  "readme": "# dr-svg-sprites\r\n[![Gitter](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/drdk/dr-svg-sprites?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n> Create SVG sprites with PNG fallbacks at needed sizes\r\n\r\n* [Usage](#usage)\r\n* [Options](#options)\r\n* [Changelog](#changelog)\r\n* [Contributing](CONTRIBUTING.md)\r\n* [Troubleshooting](TROUBLESHOOTING.md)\r\n\r\n### Usage\r\n\r\nMinimal:\r\n\r\n```js\r\nvar builder = require(\"dr-svg-sprites\");\r\nvar options = {\r\n\tspriteElementPath: \"img/logos\",\r\n\tspritePath: \"img/sprites/logo-sprite.svg\",\r\n\tcssPath: \"css/logo-sprite.css\"\r\n};\r\nbuilder(options, function () {\r\n\t// sprite was built\r\n});\r\n```\r\n\r\nwould yield the following files:\r\n- `css/logo-sprite.css`\r\n- `img/sprites/logo-sprite.svg`\r\n- `img/sprites/logo-sprite.png`\r\n\r\nAdvanced:\r\n\r\n```js\r\nvar builder = require(\"dr-svg-sprites\");\r\nvar options = {\r\n\tname: \"tv\",\r\n\tprefix: \"dr-logos\",\r\n\tspriteElementPath: \"img/logos/tv\",\r\n\tspritePath: \"img/sprites\",\r\n\tlayout: \"packed\",\r\n\tcssPath: \"css\",\r\n\tcssSuffix: \"less\",\r\n\tcssUnit: \"rem\",\r\n\tsizes: {\r\n\t\tlarge: 24,\r\n\t\tsmall: 16\r\n\t},\r\n\trefSize: \"large\"\r\n};\r\nbuilder(options, function () {\r\n\t// sprite was built\r\n});\r\n```\r\n\r\nwould yield the following files:\r\n- `css/dr-logos-tv-sprite.less`\r\n- `img/sprites/dr-logos-tv-sprite.svg`\r\n- `img/sprites/dr-logos-tv-sprite-large.png`\r\n- `img/sprites/dr-logos-tv-sprite-small.png`\r\n\r\n\r\n### Options\r\n\r\n- [options.name](#optionsname)\r\n- [options.spriteElementPath](#optionsspriteelementpath)\r\n- [options.spritePath](#optionsspritepath)\r\n- [options.previewPath](#optionspreviewpath)\r\n- [options.cssPath](#optionscsspath)\r\n- [options.cssPrefix](#optionscssPrefix)\r\n- [options.cssSuffix](#optionscsspath)\r\n- [options.cssSvgPrefix](#optionscsspath)\r\n- [options.cssPngPrefix](#optionscsspath)\r\n- [options.cssPath](#optionscsspath)\r\n- [options.cssUnit](#optionscssunit)\r\n- [options.cssBaseFontSize](#optionscssbasefontsize)\r\n- [options.cssIncludeElementSizes](#optionscssincludeelementsizes)\r\n- [options.selector](#optionsselector)\r\n- [options.template](#optionstemplate)\r\n- [options.layout](#optionslayout)\r\n- [options.map](#optionsmap)\r\n- [options.unit](#optionsunit)\r\n- [options.refSize](#optionsrefSize)\r\n- [options.sizes](#optionssizes)\r\n- [options.breakpoints](#optionsbreakpoints)\r\n- [options.baseQuery](#optionsbasequery)\r\n- [options.svgo](#optionssvgo)\r\n- [options.svgAttributes](#optionssvgattributes)\r\n\r\n\r\n#### options.name\r\nType: `String`\r\nOptional\r\n\r\nUsed when automatically building stylesheet and image filenames.\r\n\r\n#### options.spriteElementPath\r\nType: `String` or glob pattern\r\n\r\nEither the path a folder containing the elements - or a glob pattern (string or array of strings) that matches the elements - to be sprited.\r\n\r\n#### options.spritePath\r\nType: `String`\r\n\r\nDestination path of the generated sprite images.\r\n\r\nIf the filename part (ending in `.svg`) is omitted it will be built from `options.prefix`, `options.name` and  `\"sprite\"`.\r\n\r\n#### options.previewPath\r\nType: `String`\r\nDefault value: `\"\"`\r\nOptional\r\n\r\nThe path where to built a preview page. \r\n\r\nIf the filename part (ending in `.html`) is omitted it will be built from `options.prefix`, `options.name` and  `\"sprite\"`.\r\n\r\nDefault is no preview.\r\n\r\n#### options.cssPath\r\nType: `String`\r\nOptional\r\n\r\nDestination path of the generated stylesheet.\r\n\r\nIf a filename part is omitted it will get built from `options.cssPrefix`, `options.name`, `\"sprite\"` and `options.cssSuffix`.\r\n\r\nIf left blank only svg sprites and png fallbacks are generated.\r\n\t\t\t\r\n#### options.prefix\r\nType: `String`\r\nDefault value: `\"\"`\r\nOptional\r\n\r\nDefines a prefix for the name of the sprite stylesheet, images and classnames.\r\n\r\n#### options.cssPrefix\r\nType: `String`\r\nDefault value: `\"\"`\r\nOptional\r\n\r\nDefines a prefix for the name of the sprite stylesheet (this overrides `options.prefix` if set).\r\n\r\nOnly used when automatically building stylesheet filenames.\r\n\r\n#### options.cssSuffix\r\nType: `String`\r\nDefault value: `\"css\"`\r\nOptional\r\n\r\nStylesheet filetype suffix.\r\n\r\nOnly used when automatically building stylesheet filenames.\r\n\r\n#### options.cssSvgPrefix\r\nType: `String`\r\nDefault value: `\".svg\"`\r\nOptional\r\n\r\nDefines a prefix for selectors to target svg sprites. \r\n\r\n#### options.cssPngPrefix\r\nType: `String`\r\nDefault value: `\"\"`\r\nOptional\r\n\r\nDefines a prefix for selectors to target png sprites. \r\n\r\n**Note:** If both `options.cssSvgPrefix` and `options.cssPngPrefix` are empty strings a multiple-background progressive enhancement is used:\r\n\r\n```css\r\n\tbackground-image: url(\"my-sprite.png\");\r\n\tbackground-image: url(\"my-sprite.svg\"), none;\r\n```\r\nMentioned on CSS-Tricks: [Using SVG](http://css-tricks.com/using-svg/).\r\n\r\n#### options.cssUnit\r\nType: `String`\r\nDefault value: `\"px\"`\r\nOptional\r\n\r\nDefines the unit used for dimensions and positions in the stylesheet.\r\nOnly other unit that is supported (in a meaningful way) is `\"rem\"` - which is used in combination with `options.cssBaseFontSize`.\r\n\r\n#### options.cssBaseFontSize\r\nType: `String`\r\nDefault value: `16`\r\nOptional\r\n\r\nUsed to calculate values when using `options.cssUnit` set to `\"rem\"`.\r\n\r\n#### options.cssIncludeElementSizes\r\nType: `Boolean`\r\nDefault value: `true`\r\nOptional\r\n\r\nIf set to `false` `width` and `height` for the svg elements will be omitted from the stylesheet. Useful in combination with a `options.layout` of `\"alt-diagonal\"`.\r\n\r\n\r\n#### options.selector\r\nType: `Function`\r\nOptional\r\n\r\nCan be used to customize selectors to support more advanced selector structure and states (like `:hover` and `:active`).\r\n\r\nThe function is passed the following arguments:\r\n\r\n- `filename`: The svg element basename, e.g. `./svg-images/foo.svg` -> `foo`.\r\n- `tokens`: An object containing tokens that you might want to use in the selector. The following keys will be exposed:\r\n  - `prefix`: `options.prefix` if used.\r\n  - `size`: If `options.sizes` is used this is the current label.\r\n  - `state`: `options.stateToken` if used.\r\n\r\nThe default function returns a classname consisting of the svg element basenames (filename without extension) prepended with `options.prefix` if set and appended with a size label from `options.sizes` if used. `options.stateToken` is used to extract and append states to the selector. E.g. filename: `foo_hover`, prefix: `my`, size: `large`, state: `_` -> `.my-foo-large:hover`.\r\n\r\nThis is what the default function looks like for reference:\r\n```js\r\n\t\tselector: function (filename, tokens) {\r\n\t\t\tvar state = \"\";\r\n\t\t\tif (tokens.state) {\r\n\t\t\t\tvar index = filename.indexOf(tokens.state);\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tstate = \":\" + filename.slice(index + tokens.state.length);\r\n\t\t\t\t\tfilename = filename.slice(0, index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar parts = [filename];\r\n\t\t\tif (tokens.prefix) {\r\n\t\t\t\tparts.unshift(tokens.prefix);\r\n\t\t\t}\r\n\t\t\tif (tokens.size) {\r\n\t\t\t\tparts.push(tokens.size);\r\n\t\t\t}\r\n\t\t\treturn \".\" + parts.join(\"-\") + state;\r\n\t\t},\r\n```\r\n\r\n#### options.stateToken\r\nType: `String`\r\nDefault value: `null`\r\nOptional\r\n\r\nDefines a token to extract selector states from filenames. See `options.selector`.\r\n\r\n#### options.template\r\nType: `String`\r\nDefault value: `\"../templates/stylesheet.hbs\"`\r\nOptional\r\n\r\nDefines the path of the Handlebars template to use for generating the stylesheet.\r\n\r\nThe data object passed to the Handlebars template is a `Sprite` instance (see `./lib/Sprite.js`).\r\n\r\nTemplates have a few internal helpers at their disposal:\r\n\r\n- `url`: Takes a path (`String`) and returns a CSS appropriate path.\r\n- `unit`: Adds units to a value (`Number`) if needed and also converts from `px` to `rem`.\r\n- `prefix`: Accepts an array of items (`Sprite.sizes[].items`) and a selector prefix (`String`). Returns a comma separated prefixed selector for all elements in a size.\r\n- `prefixAll`: Accepts an array of sizes (`Sprite.sizes`) and a selector prefix (`String`). Returns a comma separated prefixed selector for all elements for all sizes.\r\n\r\n\r\n#### options.layout\r\nType: `String`\r\nDefault value: `\"horizontal\"`\r\nOptional\r\n\r\nDefines the layout of elements in the sprite. Possible values:\r\n- `\"horizontal\"`: Elements are placed side-by-side.\r\n- `\"vertical\"`: Elements are placed above eachother.\r\n- `\"packed\"`: Elements are packed into smallest possible space.\r\n- `\"diagonal\"`: Elements are distributed from top-left to bottom-right corner.\r\n- `\"alt-diagonal\"`: Elements are distributed from bottom-left to top-right corner.\r\n\r\n#### options.map\r\nType: `Object|Function`\r\nDefault value: `null`\r\nOptional\r\n\r\nCan be used to translate svg element basenames (filename without extension) into desired names. Handy if the basenames don't make good classnames (or contain invalid chars).\r\n\r\nIf an object is supplied it will be used as a lookup table.\r\n\r\nIf a function is supplied it will be used to transform the svg element basename.\r\n\r\n#### options.unit\r\nType: `Number`\r\nDefault value: `5`\r\n\r\nDefines unit size of the grid the sprite elements snap to.\r\nIf `options.sizes` is used a default unit size will calculated to ensure placement is  across the different sizes.\r\n\r\n#### options.refSize\r\nType: `String|Number`\r\nOptional\r\n\r\nDefines the basic size of your source svg-elements. All other sizes will be calculated relating to this. It can either be a key from the `sizes` option (which refers to a number) or just a raw number.\r\n\r\n![Source elements and refSize](https://raw.github.com/drdk/dr-svg-sprites/master/img/docs-source-elements.png)\r\n\r\nNotice how one source element is bigger than the `refSize`; this ok - as every element is scaled proportionally.\r\n\r\n#### options.sizes\r\nType: `Object`\r\nOptional\r\n\r\nA hash of size labels and values (`Number` - or `Array` if used in conjunction with `options.breakpoints` - see below) that define the different sizes of the needed sprites.\r\n\r\n```js\r\nvar options = {\r\n\t// some options\r\n\tsizes: {\r\n\t\tlarge: 39,\r\n\t\tsmall: 13\r\n\t},\r\n\trefSize: \"large\",\r\n\t// more options\r\n};\r\n```\r\n\r\n![sizes](https://raw.github.com/drdk/dr-svg-sprites/master/img/docs-sprite-sizes.png)\r\n\r\n1 SVG sprite is generated and 2 PNG sprites (1 per defined size).\r\n\r\n#### options.breakpoints\r\nType: `Array`\r\nOptional\r\n\r\nLet's you define breakpoints or custom media queries for a sprite.\r\nEach value in the array is transformed into a media query string (if it's not already one) via the `options.baseQuery` template.\r\nNumbers are automatically prepended `px` units.\r\nValues in `options.sizes` are expanded to arrays of values; the first value is the default size value used without media queries and each subsequent value is matched with a corresponding `options.breakpoints` value.\r\n\r\n```js\r\nvar options = {\r\n\t// some options\r\n\tbreakpoints: [530, \"80em\", \"@media only screen and (orientation:portrait)\"],\r\n\tsizes: {\r\n\t\tlarge: [39, 52, 65, 39],\r\n\t\tsmall: [13, 26, 39, 26]\r\n\t},\r\n\t// more options\r\n};\r\n```\r\n\r\n**Note**: No additional PNG fallbacks are generated for breakpoints in the thinking that clients supporting media queries also have SVG support.\r\n\r\n#### options.baseQuery\r\nType: `String`\r\nDefault value: `\"@media only screen and (min-width: {{breakpoint}})\"`\r\nOptional\r\n\r\nUsed to generate media query strings from the values of `options.breakpoints` by replacing the `{{breakpoint}}` token with each.\r\n\r\n```js\r\nvar options = {\r\n\t// some options\r\n\tbaseQuery: \"@media only screen and (monochrome) and (min-width: {{breakpoint}})\",\r\n\tbreakpoints: [530, 960, 1280],\r\n\tsizes: {\r\n\t\tlarge: [39, 52, 65, 39],\r\n\t\tsmall: [13, 26, 39, 26]\r\n\t},\r\n\t// more options\r\n};\r\n```\r\n\r\n#### options.svgo\r\nType: `Object`\r\nOptional\r\n\r\nThis options gives a direct route to configure [svgo](https://github.com/svg/svgo) which is used behind the scene reading and outputting SVG's.\r\n\r\n```js\r\nvar options = {\r\n\t// some options\r\n\tsvgo: {\r\n\t\tplugins: [\r\n\t\t\t{ mergePaths: false },\r\n\t\t\t{ convertTransforms: false }\r\n\t\t]\r\n\t},\r\n\t// more options\r\n}\r\n```\r\n\r\nPer default the following plugins are disabled: `moveGroupAttrsToElems`,  `collapseGroups` and `removeUselessStrokeAndFill`.\r\n\r\n#### options.svgAttributes\r\nType: `Object`\r\nOptional\r\n\r\nThis options let's you customise the attributes on the root svg tag in the sprite. \r\nAttributes with falsy values (`false`, `null`, `0` etc) will be omitted from the ouput. \r\n`viewBox`, `width`, `height` and xml namespaces are all handled automatically - no need to add them here.\r\n\r\n```js\r\nvar options = {\r\n\t// some options\r\n\tsvgAttributes: {\r\n\t\tversion: \"1.0\",\r\n\t\tpreserveAspectRatio: \"xMaxYMax meet\"\r\n\t},\r\n\t// more options\r\n}\r\n```\r\n\r\nThe default attributes values are:\r\n\r\n```js\r\nsvgAttributes: {\r\n\tbaseProfile: \"tiny\",\r\n\txmlns: \"http://www.w3.org/2000/svg\",\r\n\tpreserveAspectRatio: \"xMinYMin meet\"\r\n}\r\n```\r\n\r\n---\r\n\r\n## Changelog\r\n\r\n### 0.9.31\r\n\r\nFixed:\r\n\r\n* Bug: Clipping of sprite elements due to incorrect interpretation of translate properties.\r\n\r\nChanges:\r\n\r\n* svgo dependency downgraded from 0.5.5 to 0.4.5.\r\n\r\n### 0.9.30\r\n\r\nFixed:\r\n\r\n* Bug: `Fatal error: Cannot read property 'x' of null` by updating `layout` dependency.\r\n\r\nChanges:\r\n\r\n* Updated dependencies.\r\n\r\n### 0.9.21\r\n\r\nFeatures:\r\n\r\n* Added `options.stateToken` for simpler state handling.\r\n\r\n\r\n### 0.9.15\r\n\r\nChanges:\r\n\r\n* Using `npm shrinkwrap` to avoid surprises via dependencies.\r\n\r\n\r\n### 0.9.14\r\n\r\nChanges:\r\n\r\n* Added defaults for `options.svgo`.\r\n\r\n### 0.9.13\r\n\r\nFeatures:\r\n\r\n* `options.selector` added.\r\n\r\n### 0.9.10\r\n\r\nChanges:\r\n\r\n* Added solutions for when `options.cssSvgPrefix` and `options.cssPngPrefix` are empty strings.\r\n\r\n### 0.9.7\r\n\r\nFeatures:\r\n\r\n* `options.svgo` added.\r\n* `options.svgAttributes` added.\r\n\r\nChanges:\r\n\r\n* `options.spriteElementPath` now also supports glob patterns.\r\n* SVG namespaces are included automatically if used.\r\n* Added tests.\r\n\r\n### 0.9.5\r\n\r\nFeatures:\r\n\r\n* `options.breakpoints` added.\r\n* `options.baseQuery` added.\r\n\r\nChanges:\r\n\r\n* `options.sizes` also accepts arrays of values when used in combination with `options.breakpoints`.\r\n* White-space can now be controlled in templates without it getting clobbered.\r\n\r\n### 0.9.0\r\n\r\nFeatures:\r\n\r\n* `options.layout` added.\r\n* `options.map` added.\r\n* `options.template` added.\r\n* `options.previewPath` added.\r\n* `options.cssSvgPrefix` added.\r\n* `options.cssPngPrefix` added.\r\n* `options.cssUnit` added.\r\n* `options.cssBaseFontSize` added.\r\n* `options.cssIncludeElementSizes` added.\r\n\r\nChanges:\r\n\r\n* `options.sizes` and `options.refSize` are now optional (which also means no size tag is added to classnames if `options.sizes` is omitted).\r\n* `options.spritePath` and `options.cssPath` now also accept a full path including filename for simpler configuration.\r\n",
  "readmeFilename": "README.md",
  "_id": "dr-svg-sprites@0.9.32",
  "_from": "dr-svg-sprites@^0.9.31"
}
