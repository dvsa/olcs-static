{
  "name": "resolve-dep",
  "description": "Return an array of resolved filepaths for require-able local or named npm modules. Wildcard (glob) patterns may be used.",
  "version": "0.4.1",
  "homepage": "https://github.com/jonschlinkert/resolve-dep",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/resolve-dep.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/resolve-dep/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jonschlinkert/resolve-dep/blob/master/LICENSE-MIT"
    }
  ],
  "main": "index.js",
  "engines": {
    "node": ">= 0.10.16"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "keywords": [
    "config",
    "dep",
    "deps",
    "file",
    "filepath",
    "files",
    "glob",
    "grunt",
    "lo-dash",
    "load",
    "local",
    "lodash",
    "match",
    "matchdep",
    "minimatch",
    "module",
    "modules",
    "node",
    "npm",
    "paths",
    "pattern",
    "require",
    "resolve",
    "resolved",
    "templates"
  ],
  "dependencies": {
    "array-flatten": "0.0.2",
    "cwd": "^0.3.3",
    "globby": "^0.1.1",
    "load-pkg": "^0.1.0",
    "multimatch": "^0.3.0",
    "normalize-path": "^0.1.1",
    "resolve": "^0.6.3",
    "xtend": "^3.0.0"
  },
  "devDependencies": {
    "chai": "~1.9.1",
    "mocha": "~1.18.2",
    "verb": "^0.2.13",
    "verb-tag-jscomments": "^0.1.4"
  },
  "readme": "# resolve-dep [![NPM version](https://badge.fury.io/js/resolve-dep.png)](http://badge.fury.io/js/resolve-dep)\n\n> Return an array of resolved filepaths for require-able local or named npm modules. Wildcard (glob) patterns may be used.\n\nSimilar in concept to [matchdep](https://github.com/tkellen/node-matchdep) and [load-grunt-tasks](https://github.com/sindresorhus/load-grunt-tasks), but returns an array of fully resolved file paths to _any local modules or npm modules listed in package.json dependencies_.\n\n## Install\nInstall with [npm](npmjs.org):\n\n```bash\nnpm i resolve-dep --save-dev\n```\n\n## Usage\n\n```js\nvar resolve = require('resolve-dep');\nresolve( patterns, options )\n```\n\n## API\n\n### .resolveDep()\n\nResolve both npm packages and local modules by:\n\n  1. Attempting to expand glob patterns to local modules, then\n  1. Attempting to match glob patterns to deps in package.json\n\n**Examples:**\n\n```js\n// file path\nresolve('foo/bar.js');\n// glob patterns\nresolve('foo/*.js');\n// named npm module (installed in node_modules)\nresolve('chai');\n// combination\nresolve(['chai', 'foo/*.js']);\n```\n\n* `patterns` {Array|String}: Glob patterns for files or npm modules. \n* `options` {Object}  \n* `return` {Array} \n\n\n### .resolveDep.npm()\n\nResolve npm packages in node_modules by matching glob patterns to deps in\npackage.json. NPM modules will only be resolved if they are defined in\none of the \"dependencies\" fields in package.json.\n\n```js\n// resolve npm modules only\nresolve.npm(['chai', 'lodash']);\n```\n\n* `patterns` {Array|String} \n* `options` {Object}  \n* `return` {Array} \n\n\n### .resolveDep.local()\n\nResolve local modules by expanding glob patterns to file paths.\n\n```js\n// resolve local modules only\nresolve.local(['a/*.js', 'b/*.json']);\n```\n\n* `patterns` {Array|String} \n* `options` {Object}  \n* `return` {Array}\n\n\n### Options\n\nType: `object`\n\nThe options object supports any [globby](https://github.com/sindresorhus/globby) options, as well as the following:\n\n\n### patterns\n\nType: `string|array`\n\nThe file path, glob pattern, or name of the npm module to resolve.\n\n**File paths**\n\n```js\nresolve('templates/*.hbs')\nresolve(['a/*.hbs', 'b/*.hbs'])\n```\n\n**NPM modules**\n\n```js\nresolve('*')\nresolve(['grunt-*', 'gulp-*'])\nresolve(['grunt-*', 'gulp-*'], {type: 'devDependencies'})\nresolve(['lodash', 'assemble']);\n```\n\n#### options.config\nType: `Object`\nDefault value: `package.json`\n\nPass an explicit config object to use instead of package.json.\n\n#### options.type\n\nType: `String|Array`\n\nDefault value: `all`\n\nValid values: `all|dependencies|devDepencies|peerDependencies`\n\nAny valid npm dependency field that can be used in package.json is a valid value for this option.\n\n**Examples:**\n\n```js\n// resolve chai and mocha, if in devDependencies, otherwise an empty array\nresolve(['chai', 'mocha'], {type: 'devDependencies'});\n// resolve lodash if in dependencies, otherwise an empty array\nresolve(['lodash'], {type: 'dependencies'});\n// all dependencies\nresolve(['*'], {type: 'dependencies'});\n// all dependencies, devDependencies and peerDependencies\nresolve('*');\n```\n\n\n## Author\n\n**Jon Schlinkert**\n \n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert) \n\n## License\nCopyright (c) 2014 Jon Schlinkert, contributors.  \nReleased under the MIT license\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on July 06, 2014._\n",
  "readmeFilename": "README.md",
  "_id": "resolve-dep@0.4.1",
  "_from": "resolve-dep@^0.4.1"
}
